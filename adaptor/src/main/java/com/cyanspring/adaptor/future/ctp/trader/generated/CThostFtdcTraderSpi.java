package com.cyanspring.adaptor.future.ctp.trader.generated;
import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.ann.Virtual;
import org.bridj.cpp.CPPObject;
/**
 * <i>native declaration : ThostFtdcTraderApi.h:13</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("Trader") 
public class CThostFtdcTraderSpi extends CPPObject {
	static {
		BridJ.register();
	}
	
	/**
	 * ///当客户端与交易后台建立起通信连接时（还未登录前），该方法被调用。
	 */	
	@Virtual(0) 
	public native void OnFrontConnected();
	
	/**
	 * 	///当客户端与交易后台通信连接断开时，该方法被调用。当发生这个情况后，API会自动重新连接，客户端可不做处理。
	 *	//@param nReason 错误原因
	 *	///        0x1001 网络读失败
	 *	///        0x1002 网络写失败
	 *	///        0x2001 接收心跳超时
	 *	///        0x2002 发送心跳失败
	 *	///        0x2003 收到错误报文
	 */
	@Virtual(1) 
	public native void OnFrontDisconnected(int nReason);
	
	/**
	 * ///心跳超时警告。当长时间未收到报文时，该方法被调用。
	 * ///@param nTimeLapse 距离上次接收报文的时间
	 */
	@Virtual(2) 
	public native void OnHeartBeatWarning(int nTimeLapse);
	
	/**
	 * ///客户端认证响应
	 */
	@Virtual(3) 
	public native void OnRspAuthenticate(Pointer<CThostFtdcRspAuthenticateField > pRspAuthenticateField, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);

	/**
	 * ///登录请求响应
	 */
	@Virtual(4) 
	public native void OnRspUserLogin(Pointer<CThostFtdcRspUserLoginField > pRspUserLogin, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;

	/**
	 * ///登出请求响应
	 */
	@Virtual(5) 
	public native void OnRspUserLogout(Pointer<CThostFtdcUserLogoutField > pUserLogout, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);

	/**
	 * ///用户口令更新请求响应
	 */
	@Virtual(6) 
	public native void OnRspUserPasswordUpdate(Pointer<CThostFtdcUserPasswordUpdateField > pUserPasswordUpdate, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
		
	 /**
	  *  ///资金账户口令更新请求响应
	  */
	@Virtual(7) 
	public native void OnRspTradingAccountPasswordUpdate(Pointer<CThostFtdcTradingAccountPasswordUpdateField > pTradingAccountPasswordUpdate, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);

	/**
	 * ///报单录入请求响应
	 */
	@Virtual(8) 
	public native void OnRspOrderInsert(Pointer<CThostFtdcInputOrderField > pInputOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;

	/**
	 * ///预埋单录入请求响应
	 */
	@Virtual(9) 
	public native void OnRspParkedOrderInsert(Pointer<CThostFtdcParkedOrderField > pParkedOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	
	/**
	 * ///预埋撤单录入请求响应
	 */
	@Virtual(10) 
	public native void OnRspParkedOrderAction(Pointer<CThostFtdcParkedOrderActionField > pParkedOrderAction, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///报单操作请求响应
	 */
	@Virtual(11) 
	public native void OnRspOrderAction(Pointer<CThostFtdcInputOrderActionField > pInputOrderAction, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///查询最大报单数量响应
	 */
	@Virtual(12) 
	public native void OnRspQueryMaxOrderVolume(Pointer<CThostFtdcQueryMaxOrderVolumeField > pQueryMaxOrderVolume, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	
	/**
	 * ///投资者结算结果确认响应
	 */
	@Virtual(13) 
	public native void OnRspSettlementInfoConfirm(Pointer<CThostFtdcSettlementInfoConfirmField > pSettlementInfoConfirm, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///删除预埋单响应
	 */
	@Virtual(14) 
	public native void OnRspRemoveParkedOrder(Pointer<CThostFtdcRemoveParkedOrderField > pRemoveParkedOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///删除预埋撤单响应
	 */
	@Virtual(15) 
	public native void OnRspRemoveParkedOrderAction(Pointer<CThostFtdcRemoveParkedOrderActionField > pRemoveParkedOrderAction, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///执行宣告录入请求响应
	 */
	@Virtual(16) 
	public native void OnRspExecOrderInsert(Pointer<CThostFtdcInputExecOrderField > pInputExecOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///执行宣告操作请求响应
	 */
	@Virtual(17) 
	public native void OnRspExecOrderAction(Pointer<CThostFtdcInputExecOrderActionField > pInputExecOrderAction, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///询价录入请求响应
	 */
	@Virtual(18) 
	public native void OnRspForQuoteInsert(Pointer<CThostFtdcInputForQuoteField > pInputForQuote, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast);
	
	/**
	 * ///报价录入请求响应
	 */
	@Virtual(19) 
	public native void OnRspQuoteInsert(Pointer<CThostFtdcInputQuoteField > pInputQuote, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///报价操作请求响应
	 */
	@Virtual(20) 
	public native void OnRspQuoteAction(Pointer<CThostFtdcInputQuoteActionField > pInputQuoteAction, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///申请组合录入请求响应
	 */
	@Virtual(21) 
	public native void OnRspCombActionInsert(Pointer<CThostFtdcInputCombActionField > pInputCombAction, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询报单响应
	 */
	@Virtual(22) 
	public native void OnRspQryOrder(Pointer<CThostFtdcOrderField > pOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询成交响应
	 */
	@Virtual(23) 
	public native void OnRspQryTrade(Pointer<CThostFtdcTradeField > pTrade, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询投资者持仓响应
	 */
	@Virtual(24) 
	public native void OnRspQryInvestorPosition(Pointer<CThostFtdcInvestorPositionField > pInvestorPosition, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询资金账户响应
	 */
	@Virtual(25) 
	public native void OnRspQryTradingAccount(Pointer<CThostFtdcTradingAccountField > pTradingAccount, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询投资者响应
	 */
	@Virtual(26) 
	public native void OnRspQryInvestor(Pointer<CThostFtdcInvestorField > pInvestor, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询交易编码响应
	 */
	@Virtual(27) 
	public native void OnRspQryTradingCode(Pointer<CThostFtdcTradingCodeField > pTradingCode, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询合约保证金率响应
	 */
	@Virtual(28) 
	public native void OnRspQryInstrumentMarginRate(Pointer<CThostFtdcInstrumentMarginRateField > pInstrumentMarginRate, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询合约手续费率响应
	 */
	@Virtual(29) 
	public native void OnRspQryInstrumentCommissionRate(Pointer<CThostFtdcInstrumentCommissionRateField > pInstrumentCommissionRate, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询交易所响应
	 */
	@Virtual(30) 
	public native void OnRspQryExchange(Pointer<CThostFtdcExchangeField > pExchange, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询产品响应
	 */
	@Virtual(31) 
	public native void OnRspQryProduct(Pointer<CThostFtdcProductField > pProduct, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询合约响应
	 */
	@Virtual(32) 
	public native void OnRspQryInstrument(Pointer<CThostFtdcInstrumentField > pInstrument, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询行情响应
	 */
	@Virtual(33) 
	public native void OnRspQryDepthMarketData(Pointer<CThostFtdcDepthMarketDataField > pDepthMarketData, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询投资者结算结果响应
	 */
	@Virtual(34) 
	public native void OnRspQrySettlementInfo(Pointer<CThostFtdcSettlementInfoField > pSettlementInfo, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询转帐银行响应
	 */
	@Virtual(35) 
	public native void OnRspQryTransferBank(Pointer<CThostFtdcTransferBankField > pTransferBank, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询投资者持仓明细响应
	 */
	@Virtual(36) 
	public native void OnRspQryInvestorPositionDetail(Pointer<CThostFtdcInvestorPositionDetailField > pInvestorPositionDetail, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询客户通知响应
	 */
	@Virtual(37) 
	public native void OnRspQryNotice(Pointer<CThostFtdcNoticeField > pNotice, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询结算信息确认响应
	 */
	@Virtual(38) 
	public native void OnRspQrySettlementInfoConfirm(Pointer<CThostFtdcSettlementInfoConfirmField > pSettlementInfoConfirm, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询投资者持仓明细响应
	 */
	@Virtual(39) 
	public native void OnRspQryInvestorPositionCombineDetail(Pointer<CThostFtdcInvestorPositionCombineDetailField > pInvestorPositionCombineDetail, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///查询保证金监管系统经纪公司资金账户密钥响应
	 */
	@Virtual(40) 
	public native void OnRspQryCFMMCTradingAccountKey(Pointer<CThostFtdcCFMMCTradingAccountKeyField > pCFMMCTradingAccountKey, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询仓单折抵信息响应
	 */
	@Virtual(41) 
	public native void OnRspQryEWarrantOffset(Pointer<CThostFtdcEWarrantOffsetField > pEWarrantOffset, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询投资者品种/跨品种保证金响应
	 */
	@Virtual(42) 
	public native void OnRspQryInvestorProductGroupMargin(Pointer<CThostFtdcInvestorProductGroupMarginField > pInvestorProductGroupMargin, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询交易所保证金率响应
	 */
	@Virtual(43) 
	public native void OnRspQryExchangeMarginRate(Pointer<CThostFtdcExchangeMarginRateField > pExchangeMarginRate, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询交易所调整保证金率响应
	 */
	@Virtual(44) 
	public native void OnRspQryExchangeMarginRateAdjust(Pointer<CThostFtdcExchangeMarginRateAdjustField > pExchangeMarginRateAdjust, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询汇率响应
	 */
	@Virtual(45) 
	public native void OnRspQryExchangeRate(Pointer<CThostFtdcExchangeRateField > pExchangeRate, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询二级代理操作员银期权限响应
	 */
	@Virtual(46) 
	public native void OnRspQrySecAgentACIDMap(Pointer<CThostFtdcSecAgentACIDMapField > pSecAgentACIDMap, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询产品报价汇率
	 */
	@Virtual(47) 
	public native void OnRspQryProductExchRate(Pointer<CThostFtdcProductExchRateField > pProductExchRate, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询期权交易成本响应
	 */
	@Virtual(48) 
	public native void OnRspQryOptionInstrTradeCost(Pointer<CThostFtdcOptionInstrTradeCostField > pOptionInstrTradeCost, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询期权合约手续费响应
	 */
	@Virtual(49) 
	public native void OnRspQryOptionInstrCommRate(Pointer<CThostFtdcOptionInstrCommRateField > pOptionInstrCommRate, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询执行宣告响应
	 */
	@Virtual(50) 
	public native void OnRspQryExecOrder(Pointer<CThostFtdcExecOrderField > pExecOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询询价响应
	 */
	@Virtual(51) 
	public native void OnRspQryForQuote(Pointer<CThostFtdcForQuoteField > pForQuote, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询报价响应
	 */
	@Virtual(52) 
	public native void OnRspQryQuote(Pointer<CThostFtdcQuoteField > pQuote, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询组合合约安全系数响应
	 */
	@Virtual(53) 
	public native void OnRspQryCombInstrumentGuard(Pointer<CThostFtdcCombInstrumentGuardField > pCombInstrumentGuard, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询申请组合响应
	 */
	@Virtual(54) 
	public native void OnRspQryCombAction(Pointer<CThostFtdcCombActionField > pCombAction, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询转帐流水响应
	 */
	@Virtual(55) 
	public native void OnRspQryTransferSerial(Pointer<CThostFtdcTransferSerialField > pTransferSerial, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询银期签约关系响应
	 */
	@Virtual(56) 
	public native void OnRspQryAccountregister(Pointer<CThostFtdcAccountregisterField > pAccountregister, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///错误应答
	 */
	@Virtual(57) 
	public native void OnRspError(Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///报单通知
	 */
	@Virtual(58) 
	public native void OnRtnOrder(Pointer<CThostFtdcOrderField > pOrder) ;
	
	/**
	 * ///成交通知
	 */
	@Virtual(59) 
	public native void OnRtnTrade(Pointer<CThostFtdcTradeField > pTrade) ;
	
	/**
	 * ///报单录入错误回报
	 */
	@Virtual(60) 
	public native void OnErrRtnOrderInsert(Pointer<CThostFtdcInputOrderField > pInputOrder, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///报单操作错误回报
	 */
	@Virtual(61) 
	public native void OnErrRtnOrderAction(Pointer<CThostFtdcOrderActionField > pOrderAction, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///合约交易状态通知
	 */
	@Virtual(62) 
	public native void OnRtnInstrumentStatus(Pointer<CThostFtdcInstrumentStatusField > pInstrumentStatus) ;
	
	/**
	 * ///交易通知
	 */
	@Virtual(63) 
	public native void OnRtnTradingNotice(Pointer<CThostFtdcTradingNoticeInfoField > pTradingNoticeInfo) ;
	
	/**
	 * ///提示条件单校验错误
	 */
	@Virtual(64) 
	public native void OnRtnErrorConditionalOrder(Pointer<CThostFtdcErrorConditionalOrderField > pErrorConditionalOrder) ;
	
	/**
	 * ///执行宣告通知
	 */
	@Virtual(65) 
	public native void OnRtnExecOrder(Pointer<CThostFtdcExecOrderField > pExecOrder) ;
	
	/**
	 * ///执行宣告录入错误回报
	 */
	@Virtual(66) 
	public native void OnErrRtnExecOrderInsert(Pointer<CThostFtdcInputExecOrderField > pInputExecOrder, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///执行宣告操作错误回报
	 */
	@Virtual(67) 
	public native void OnErrRtnExecOrderAction(Pointer<CThostFtdcExecOrderActionField > pExecOrderAction, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///询价录入错误回报
	 */
	@Virtual(68) 
	public native void OnErrRtnForQuoteInsert(Pointer<CThostFtdcInputForQuoteField > pInputForQuote, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///报价通知
	 */
	@Virtual(69) 
	public native void OnRtnQuote(Pointer<CThostFtdcQuoteField > pQuote) ;
	
	/**
	 * ///报价录入错误回报
	 */
	@Virtual(70) 
	public native void OnErrRtnQuoteInsert(Pointer<CThostFtdcInputQuoteField > pInputQuote, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///报价操作错误回报
	 */
	@Virtual(71) 
	public native void OnErrRtnQuoteAction(Pointer<CThostFtdcQuoteActionField > pQuoteAction, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///询价通知
	 */
	@Virtual(72) 
	public native void OnRtnForQuoteRsp(Pointer<CThostFtdcForQuoteRspField > pForQuoteRsp) ;
	
	/**
	 * ///保证金监控中心用户令牌
	 */
	@Virtual(73) 
	public native void OnRtnCFMMCTradingAccountToken(Pointer<CThostFtdcCFMMCTradingAccountTokenField > pCFMMCTradingAccountToken) ;
	
	/**
	 * ///申请组合通知
	 */
	@Virtual(74) 
	public native void OnRtnCombAction(Pointer<CThostFtdcCombActionField > pCombAction) ;
	
	/**
	 * ///申请组合录入错误回报
	 */
	@Virtual(75) 
	public native void OnErrRtnCombActionInsert(Pointer<CThostFtdcInputCombActionField > pInputCombAction, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///请求查询签约银行响应
	 */
	@Virtual(76) 
	public native void OnRspQryContractBank(Pointer<CThostFtdcContractBankField > pContractBank, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询预埋单响应
	 */
	@Virtual(77) 
	public native void OnRspQryParkedOrder(Pointer<CThostFtdcParkedOrderField > pParkedOrder, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询预埋撤单响应
	 */
	@Virtual(78) 
	public native void OnRspQryParkedOrderAction(Pointer<CThostFtdcParkedOrderActionField > pParkedOrderAction, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询交易通知响应
	 */
	@Virtual(79) 
	public native void OnRspQryTradingNotice(Pointer<CThostFtdcTradingNoticeField > pTradingNotice, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询经纪公司交易参数响应
	 */
	@Virtual(80) 
	public native void OnRspQryBrokerTradingParams(Pointer<CThostFtdcBrokerTradingParamsField > pBrokerTradingParams, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询经纪公司交易算法响应
	 */
	@Virtual(81) 
	public native void OnRspQryBrokerTradingAlgos(Pointer<CThostFtdcBrokerTradingAlgosField > pBrokerTradingAlgos, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///请求查询监控中心用户令牌
	 */
	@Virtual(82) 
	public native void OnRspQueryCFMMCTradingAccountToken(Pointer<CThostFtdcQueryCFMMCTradingAccountTokenField > pQueryCFMMCTradingAccountToken, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///银行发起银行资金转期货通知
	 */
	@Virtual(83) 
	public native void OnRtnFromBankToFutureByBank(Pointer<CThostFtdcRspTransferField > pRspTransfer) ;
	
	/**
	 * ///银行发起期货资金转银行通知
	 */
	@Virtual(84) 
	public native void OnRtnFromFutureToBankByBank(Pointer<CThostFtdcRspTransferField > pRspTransfer) ;
	
	/**
	 * ///银行发起冲正银行转期货通知
	 */
	@Virtual(85) 
	public native void OnRtnRepealFromBankToFutureByBank(Pointer<CThostFtdcRspRepealField > pRspRepeal) ;
	
	/**
	 * ///银行发起冲正期货转银行通知
	 */
	@Virtual(86) 
	public native void OnRtnRepealFromFutureToBankByBank(Pointer<CThostFtdcRspRepealField > pRspRepeal) ;
	
	/**
	 * ///期货发起银行资金转期货通知
	 */
	@Virtual(87) 
	public native void OnRtnFromBankToFutureByFuture(Pointer<CThostFtdcRspTransferField > pRspTransfer) ;
	
	/**
	 * ///期货发起期货资金转银行通知
	 */
	@Virtual(88) 
	public native void OnRtnFromFutureToBankByFuture(Pointer<CThostFtdcRspTransferField > pRspTransfer) ;
	
	/**
	 * ///系统运行时期货端手工发起冲正银行转期货请求，银行处理完毕后报盘发回的通知
	 */
	@Virtual(89) 
	public native void OnRtnRepealFromBankToFutureByFutureManual(Pointer<CThostFtdcRspRepealField > pRspRepeal) ;
	
	/**
	 * ///系统运行时期货端手工发起冲正期货转银行请求，银行处理完毕后报盘发回的通知
	 */
	@Virtual(90) 
	public native void OnRtnRepealFromFutureToBankByFutureManual(Pointer<CThostFtdcRspRepealField > pRspRepeal) ;
	
	/**
	 * ///期货发起查询银行余额通知
	 */
	@Virtual(91) 
	public native void OnRtnQueryBankBalanceByFuture(Pointer<CThostFtdcNotifyQueryAccountField > pNotifyQueryAccount) ;
	
	/**
	 * ///期货发起银行资金转期货错误回报
	 */
	@Virtual(92) 
	public native void OnErrRtnBankToFutureByFuture(Pointer<CThostFtdcReqTransferField > pReqTransfer, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///期货发起期货资金转银行错误回报
	 */
	@Virtual(93) 
	public native void OnErrRtnFutureToBankByFuture(Pointer<CThostFtdcReqTransferField > pReqTransfer, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///系统运行时期货端手工发起冲正银行转期货错误回报
	 */
	@Virtual(94) 
	public native void OnErrRtnRepealBankToFutureByFutureManual(Pointer<CThostFtdcReqRepealField > pReqRepeal, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///系统运行时期货端手工发起冲正期货转银行错误回报
	 */
	@Virtual(95) 
	public native void OnErrRtnRepealFutureToBankByFutureManual(Pointer<CThostFtdcReqRepealField > pReqRepeal, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///期货发起查询银行余额错误回报
	 */
	@Virtual(96) 
	public native void OnErrRtnQueryBankBalanceByFuture(Pointer<CThostFtdcReqQueryAccountField > pReqQueryAccount, Pointer<CThostFtdcRspInfoField > pRspInfo) ;
	
	/**
	 * ///期货发起冲正银行转期货请求，银行处理完毕后报盘发回的通知
	 */
	@Virtual(97) 
	public native void OnRtnRepealFromBankToFutureByFuture(Pointer<CThostFtdcRspRepealField > pRspRepeal) ;
	
	/**
	 * ///期货发起冲正期货转银行请求，银行处理完毕后报盘发回的通知
	 */
	@Virtual(98) 
	public native void OnRtnRepealFromFutureToBankByFuture(Pointer<CThostFtdcRspRepealField > pRspRepeal) ;
	
	/**
	 * ///期货发起银行资金转期货应答
	 */
	@Virtual(99) 
	public native void OnRspFromBankToFutureByFuture(Pointer<CThostFtdcReqTransferField > pReqTransfer, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///期货发起期货资金转银行应答
	 */
	@Virtual(100) 
	public native void OnRspFromFutureToBankByFuture(Pointer<CThostFtdcReqTransferField > pReqTransfer, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///期货发起查询银行余额应答
	 */
	@Virtual(101) 
	public native void OnRspQueryBankAccountMoneyByFuture(Pointer<CThostFtdcReqQueryAccountField > pReqQueryAccount, Pointer<CThostFtdcRspInfoField > pRspInfo, int nRequestID, boolean bIsLast) ;
	
	/**
	 * ///银行发起银期开户通知
	 */
	@Virtual(102) 
	public native void OnRtnOpenAccountByBank(Pointer<CThostFtdcOpenAccountField > pOpenAccount) ;
	
	/**
	 * ///银行发起银期销户通知
	 */
	@Virtual(103) 
	public native void OnRtnCancelAccountByBank(Pointer<CThostFtdcCancelAccountField > pCancelAccount) ;
	
	/**
	 * ///银行发起变更银行账号通知
	 */
	@Virtual(104) 
	public native void OnRtnChangeAccountByBank(Pointer<CThostFtdcChangeAccountField > pChangeAccount) ;
	
	
	
	public CThostFtdcTraderSpi() {
		super();
	}
	public CThostFtdcTraderSpi(Pointer pointer) {
		super(pointer);
	}
}
