/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cyanspring.avro.generate.trade.bean;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderUpdate extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderUpdate\",\"namespace\":\"com.cyanspring.avro.generate.trade.bean\",\"fields\":[{\"name\":\"objectType\",\"type\":\"int\"},{\"name\":\"exchangeAccount\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"exchangeOrderId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"symbol\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"quantity\",\"type\":\"double\"},{\"name\":\"execType\",\"type\":\"int\"},{\"name\":\"ordStatus\",\"type\":\"int\"},{\"name\":\"orderSide\",\"type\":\"int\"},{\"name\":\"orderType\",\"type\":\"int\"},{\"name\":\"timeInForce\",\"type\":\"int\"},{\"name\":\"created\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"clOrderId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"txId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"msg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int objectType;
  @Deprecated public java.lang.String exchangeAccount;
  @Deprecated public java.lang.String exchangeOrderId;
  @Deprecated public java.lang.String symbol;
  @Deprecated public double price;
  @Deprecated public double quantity;
  @Deprecated public int execType;
  @Deprecated public int ordStatus;
  @Deprecated public int orderSide;
  @Deprecated public int orderType;
  @Deprecated public int timeInForce;
  @Deprecated public java.lang.String created;
  @Deprecated public java.lang.String clOrderId;
  @Deprecated public java.lang.String txId;
  @Deprecated public java.lang.String msg;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public OrderUpdate() {}

  /**
   * All-args constructor.
   */
  public OrderUpdate(java.lang.Integer objectType, java.lang.String exchangeAccount, java.lang.String exchangeOrderId, java.lang.String symbol, java.lang.Double price, java.lang.Double quantity, java.lang.Integer execType, java.lang.Integer ordStatus, java.lang.Integer orderSide, java.lang.Integer orderType, java.lang.Integer timeInForce, java.lang.String created, java.lang.String clOrderId, java.lang.String txId, java.lang.String msg) {
    this.objectType = objectType;
    this.exchangeAccount = exchangeAccount;
    this.exchangeOrderId = exchangeOrderId;
    this.symbol = symbol;
    this.price = price;
    this.quantity = quantity;
    this.execType = execType;
    this.ordStatus = ordStatus;
    this.orderSide = orderSide;
    this.orderType = orderType;
    this.timeInForce = timeInForce;
    this.created = created;
    this.clOrderId = clOrderId;
    this.txId = txId;
    this.msg = msg;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return objectType;
    case 1: return exchangeAccount;
    case 2: return exchangeOrderId;
    case 3: return symbol;
    case 4: return price;
    case 5: return quantity;
    case 6: return execType;
    case 7: return ordStatus;
    case 8: return orderSide;
    case 9: return orderType;
    case 10: return timeInForce;
    case 11: return created;
    case 12: return clOrderId;
    case 13: return txId;
    case 14: return msg;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: objectType = (java.lang.Integer)value$; break;
    case 1: exchangeAccount = (java.lang.String)value$; break;
    case 2: exchangeOrderId = (java.lang.String)value$; break;
    case 3: symbol = (java.lang.String)value$; break;
    case 4: price = (java.lang.Double)value$; break;
    case 5: quantity = (java.lang.Double)value$; break;
    case 6: execType = (java.lang.Integer)value$; break;
    case 7: ordStatus = (java.lang.Integer)value$; break;
    case 8: orderSide = (java.lang.Integer)value$; break;
    case 9: orderType = (java.lang.Integer)value$; break;
    case 10: timeInForce = (java.lang.Integer)value$; break;
    case 11: created = (java.lang.String)value$; break;
    case 12: clOrderId = (java.lang.String)value$; break;
    case 13: txId = (java.lang.String)value$; break;
    case 14: msg = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'objectType' field.
   */
  public java.lang.Integer getObjectType() {
    return objectType;
  }

  /**
   * Sets the value of the 'objectType' field.
   * @param value the value to set.
   */
  public void setObjectType(java.lang.Integer value) {
    this.objectType = value;
  }

  /**
   * Gets the value of the 'exchangeAccount' field.
   */
  public java.lang.String getExchangeAccount() {
    return exchangeAccount;
  }

  /**
   * Sets the value of the 'exchangeAccount' field.
   * @param value the value to set.
   */
  public void setExchangeAccount(java.lang.String value) {
    this.exchangeAccount = value;
  }

  /**
   * Gets the value of the 'exchangeOrderId' field.
   */
  public java.lang.String getExchangeOrderId() {
    return exchangeOrderId;
  }

  /**
   * Sets the value of the 'exchangeOrderId' field.
   * @param value the value to set.
   */
  public void setExchangeOrderId(java.lang.String value) {
    this.exchangeOrderId = value;
  }

  /**
   * Gets the value of the 'symbol' field.
   */
  public java.lang.String getSymbol() {
    return symbol;
  }

  /**
   * Sets the value of the 'symbol' field.
   * @param value the value to set.
   */
  public void setSymbol(java.lang.String value) {
    this.symbol = value;
  }

  /**
   * Gets the value of the 'price' field.
   */
  public java.lang.Double getPrice() {
    return price;
  }

  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.lang.Double value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   */
  public java.lang.Double getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Double value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'execType' field.
   */
  public java.lang.Integer getExecType() {
    return execType;
  }

  /**
   * Sets the value of the 'execType' field.
   * @param value the value to set.
   */
  public void setExecType(java.lang.Integer value) {
    this.execType = value;
  }

  /**
   * Gets the value of the 'ordStatus' field.
   */
  public java.lang.Integer getOrdStatus() {
    return ordStatus;
  }

  /**
   * Sets the value of the 'ordStatus' field.
   * @param value the value to set.
   */
  public void setOrdStatus(java.lang.Integer value) {
    this.ordStatus = value;
  }

  /**
   * Gets the value of the 'orderSide' field.
   */
  public java.lang.Integer getOrderSide() {
    return orderSide;
  }

  /**
   * Sets the value of the 'orderSide' field.
   * @param value the value to set.
   */
  public void setOrderSide(java.lang.Integer value) {
    this.orderSide = value;
  }

  /**
   * Gets the value of the 'orderType' field.
   */
  public java.lang.Integer getOrderType() {
    return orderType;
  }

  /**
   * Sets the value of the 'orderType' field.
   * @param value the value to set.
   */
  public void setOrderType(java.lang.Integer value) {
    this.orderType = value;
  }

  /**
   * Gets the value of the 'timeInForce' field.
   */
  public java.lang.Integer getTimeInForce() {
    return timeInForce;
  }

  /**
   * Sets the value of the 'timeInForce' field.
   * @param value the value to set.
   */
  public void setTimeInForce(java.lang.Integer value) {
    this.timeInForce = value;
  }

  /**
   * Gets the value of the 'created' field.
   */
  public java.lang.String getCreated() {
    return created;
  }

  /**
   * Sets the value of the 'created' field.
   * @param value the value to set.
   */
  public void setCreated(java.lang.String value) {
    this.created = value;
  }

  /**
   * Gets the value of the 'clOrderId' field.
   */
  public java.lang.String getClOrderId() {
    return clOrderId;
  }

  /**
   * Sets the value of the 'clOrderId' field.
   * @param value the value to set.
   */
  public void setClOrderId(java.lang.String value) {
    this.clOrderId = value;
  }

  /**
   * Gets the value of the 'txId' field.
   */
  public java.lang.String getTxId() {
    return txId;
  }

  /**
   * Sets the value of the 'txId' field.
   * @param value the value to set.
   */
  public void setTxId(java.lang.String value) {
    this.txId = value;
  }

  /**
   * Gets the value of the 'msg' field.
   */
  public java.lang.String getMsg() {
    return msg;
  }

  /**
   * Sets the value of the 'msg' field.
   * @param value the value to set.
   */
  public void setMsg(java.lang.String value) {
    this.msg = value;
  }

  /** Creates a new OrderUpdate RecordBuilder */
  public static com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder newBuilder() {
    return new com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder();
  }
  
  /** Creates a new OrderUpdate RecordBuilder by copying an existing Builder */
  public static com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder newBuilder(com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder other) {
    return new com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder(other);
  }
  
  /** Creates a new OrderUpdate RecordBuilder by copying an existing OrderUpdate instance */
  public static com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder newBuilder(com.cyanspring.avro.generate.trade.bean.OrderUpdate other) {
    return new com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder(other);
  }
  
  /**
   * RecordBuilder for OrderUpdate instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderUpdate>
    implements org.apache.avro.data.RecordBuilder<OrderUpdate> {

    private int objectType;
    private java.lang.String exchangeAccount;
    private java.lang.String exchangeOrderId;
    private java.lang.String symbol;
    private double price;
    private double quantity;
    private int execType;
    private int ordStatus;
    private int orderSide;
    private int orderType;
    private int timeInForce;
    private java.lang.String created;
    private java.lang.String clOrderId;
    private java.lang.String txId;
    private java.lang.String msg;

    /** Creates a new Builder */
    private Builder() {
      super(com.cyanspring.avro.generate.trade.bean.OrderUpdate.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.objectType)) {
        this.objectType = data().deepCopy(fields()[0].schema(), other.objectType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.exchangeAccount)) {
        this.exchangeAccount = data().deepCopy(fields()[1].schema(), other.exchangeAccount);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.exchangeOrderId)) {
        this.exchangeOrderId = data().deepCopy(fields()[2].schema(), other.exchangeOrderId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.symbol)) {
        this.symbol = data().deepCopy(fields()[3].schema(), other.symbol);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.price)) {
        this.price = data().deepCopy(fields()[4].schema(), other.price);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.quantity)) {
        this.quantity = data().deepCopy(fields()[5].schema(), other.quantity);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.execType)) {
        this.execType = data().deepCopy(fields()[6].schema(), other.execType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ordStatus)) {
        this.ordStatus = data().deepCopy(fields()[7].schema(), other.ordStatus);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.orderSide)) {
        this.orderSide = data().deepCopy(fields()[8].schema(), other.orderSide);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.orderType)) {
        this.orderType = data().deepCopy(fields()[9].schema(), other.orderType);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.timeInForce)) {
        this.timeInForce = data().deepCopy(fields()[10].schema(), other.timeInForce);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.created)) {
        this.created = data().deepCopy(fields()[11].schema(), other.created);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.clOrderId)) {
        this.clOrderId = data().deepCopy(fields()[12].schema(), other.clOrderId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.txId)) {
        this.txId = data().deepCopy(fields()[13].schema(), other.txId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.msg)) {
        this.msg = data().deepCopy(fields()[14].schema(), other.msg);
        fieldSetFlags()[14] = true;
      }
    }
    
    /** Creates a Builder by copying an existing OrderUpdate instance */
    private Builder(com.cyanspring.avro.generate.trade.bean.OrderUpdate other) {
            super(com.cyanspring.avro.generate.trade.bean.OrderUpdate.SCHEMA$);
      if (isValidValue(fields()[0], other.objectType)) {
        this.objectType = data().deepCopy(fields()[0].schema(), other.objectType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.exchangeAccount)) {
        this.exchangeAccount = data().deepCopy(fields()[1].schema(), other.exchangeAccount);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.exchangeOrderId)) {
        this.exchangeOrderId = data().deepCopy(fields()[2].schema(), other.exchangeOrderId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.symbol)) {
        this.symbol = data().deepCopy(fields()[3].schema(), other.symbol);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.price)) {
        this.price = data().deepCopy(fields()[4].schema(), other.price);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.quantity)) {
        this.quantity = data().deepCopy(fields()[5].schema(), other.quantity);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.execType)) {
        this.execType = data().deepCopy(fields()[6].schema(), other.execType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ordStatus)) {
        this.ordStatus = data().deepCopy(fields()[7].schema(), other.ordStatus);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.orderSide)) {
        this.orderSide = data().deepCopy(fields()[8].schema(), other.orderSide);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.orderType)) {
        this.orderType = data().deepCopy(fields()[9].schema(), other.orderType);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.timeInForce)) {
        this.timeInForce = data().deepCopy(fields()[10].schema(), other.timeInForce);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.created)) {
        this.created = data().deepCopy(fields()[11].schema(), other.created);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.clOrderId)) {
        this.clOrderId = data().deepCopy(fields()[12].schema(), other.clOrderId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.txId)) {
        this.txId = data().deepCopy(fields()[13].schema(), other.txId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.msg)) {
        this.msg = data().deepCopy(fields()[14].schema(), other.msg);
        fieldSetFlags()[14] = true;
      }
    }

    /** Gets the value of the 'objectType' field */
    public java.lang.Integer getObjectType() {
      return objectType;
    }
    
    /** Sets the value of the 'objectType' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setObjectType(int value) {
      validate(fields()[0], value);
      this.objectType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'objectType' field has been set */
    public boolean hasObjectType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'objectType' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearObjectType() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'exchangeAccount' field */
    public java.lang.String getExchangeAccount() {
      return exchangeAccount;
    }
    
    /** Sets the value of the 'exchangeAccount' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setExchangeAccount(java.lang.String value) {
      validate(fields()[1], value);
      this.exchangeAccount = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'exchangeAccount' field has been set */
    public boolean hasExchangeAccount() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'exchangeAccount' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearExchangeAccount() {
      exchangeAccount = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'exchangeOrderId' field */
    public java.lang.String getExchangeOrderId() {
      return exchangeOrderId;
    }
    
    /** Sets the value of the 'exchangeOrderId' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setExchangeOrderId(java.lang.String value) {
      validate(fields()[2], value);
      this.exchangeOrderId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'exchangeOrderId' field has been set */
    public boolean hasExchangeOrderId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'exchangeOrderId' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearExchangeOrderId() {
      exchangeOrderId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'symbol' field */
    public java.lang.String getSymbol() {
      return symbol;
    }
    
    /** Sets the value of the 'symbol' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setSymbol(java.lang.String value) {
      validate(fields()[3], value);
      this.symbol = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'symbol' field has been set */
    public boolean hasSymbol() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'symbol' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearSymbol() {
      symbol = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'price' field */
    public java.lang.Double getPrice() {
      return price;
    }
    
    /** Sets the value of the 'price' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setPrice(double value) {
      validate(fields()[4], value);
      this.price = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'price' field has been set */
    public boolean hasPrice() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'price' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearPrice() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'quantity' field */
    public java.lang.Double getQuantity() {
      return quantity;
    }
    
    /** Sets the value of the 'quantity' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setQuantity(double value) {
      validate(fields()[5], value);
      this.quantity = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'quantity' field has been set */
    public boolean hasQuantity() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'quantity' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearQuantity() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'execType' field */
    public java.lang.Integer getExecType() {
      return execType;
    }
    
    /** Sets the value of the 'execType' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setExecType(int value) {
      validate(fields()[6], value);
      this.execType = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'execType' field has been set */
    public boolean hasExecType() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'execType' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearExecType() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'ordStatus' field */
    public java.lang.Integer getOrdStatus() {
      return ordStatus;
    }
    
    /** Sets the value of the 'ordStatus' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setOrdStatus(int value) {
      validate(fields()[7], value);
      this.ordStatus = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'ordStatus' field has been set */
    public boolean hasOrdStatus() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'ordStatus' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearOrdStatus() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'orderSide' field */
    public java.lang.Integer getOrderSide() {
      return orderSide;
    }
    
    /** Sets the value of the 'orderSide' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setOrderSide(int value) {
      validate(fields()[8], value);
      this.orderSide = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'orderSide' field has been set */
    public boolean hasOrderSide() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'orderSide' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearOrderSide() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'orderType' field */
    public java.lang.Integer getOrderType() {
      return orderType;
    }
    
    /** Sets the value of the 'orderType' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setOrderType(int value) {
      validate(fields()[9], value);
      this.orderType = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'orderType' field has been set */
    public boolean hasOrderType() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'orderType' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearOrderType() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'timeInForce' field */
    public java.lang.Integer getTimeInForce() {
      return timeInForce;
    }
    
    /** Sets the value of the 'timeInForce' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setTimeInForce(int value) {
      validate(fields()[10], value);
      this.timeInForce = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'timeInForce' field has been set */
    public boolean hasTimeInForce() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'timeInForce' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearTimeInForce() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'created' field */
    public java.lang.String getCreated() {
      return created;
    }
    
    /** Sets the value of the 'created' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setCreated(java.lang.String value) {
      validate(fields()[11], value);
      this.created = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'created' field has been set */
    public boolean hasCreated() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'created' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearCreated() {
      created = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'clOrderId' field */
    public java.lang.String getClOrderId() {
      return clOrderId;
    }
    
    /** Sets the value of the 'clOrderId' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setClOrderId(java.lang.String value) {
      validate(fields()[12], value);
      this.clOrderId = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'clOrderId' field has been set */
    public boolean hasClOrderId() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'clOrderId' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearClOrderId() {
      clOrderId = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'txId' field */
    public java.lang.String getTxId() {
      return txId;
    }
    
    /** Sets the value of the 'txId' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setTxId(java.lang.String value) {
      validate(fields()[13], value);
      this.txId = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'txId' field has been set */
    public boolean hasTxId() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'txId' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearTxId() {
      txId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'msg' field */
    public java.lang.String getMsg() {
      return msg;
    }
    
    /** Sets the value of the 'msg' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder setMsg(java.lang.String value) {
      validate(fields()[14], value);
      this.msg = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'msg' field has been set */
    public boolean hasMsg() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'msg' field */
    public com.cyanspring.avro.generate.trade.bean.OrderUpdate.Builder clearMsg() {
      msg = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    public OrderUpdate build() {
      try {
        OrderUpdate record = new OrderUpdate();
        record.objectType = fieldSetFlags()[0] ? this.objectType : (java.lang.Integer) defaultValue(fields()[0]);
        record.exchangeAccount = fieldSetFlags()[1] ? this.exchangeAccount : (java.lang.String) defaultValue(fields()[1]);
        record.exchangeOrderId = fieldSetFlags()[2] ? this.exchangeOrderId : (java.lang.String) defaultValue(fields()[2]);
        record.symbol = fieldSetFlags()[3] ? this.symbol : (java.lang.String) defaultValue(fields()[3]);
        record.price = fieldSetFlags()[4] ? this.price : (java.lang.Double) defaultValue(fields()[4]);
        record.quantity = fieldSetFlags()[5] ? this.quantity : (java.lang.Double) defaultValue(fields()[5]);
        record.execType = fieldSetFlags()[6] ? this.execType : (java.lang.Integer) defaultValue(fields()[6]);
        record.ordStatus = fieldSetFlags()[7] ? this.ordStatus : (java.lang.Integer) defaultValue(fields()[7]);
        record.orderSide = fieldSetFlags()[8] ? this.orderSide : (java.lang.Integer) defaultValue(fields()[8]);
        record.orderType = fieldSetFlags()[9] ? this.orderType : (java.lang.Integer) defaultValue(fields()[9]);
        record.timeInForce = fieldSetFlags()[10] ? this.timeInForce : (java.lang.Integer) defaultValue(fields()[10]);
        record.created = fieldSetFlags()[11] ? this.created : (java.lang.String) defaultValue(fields()[11]);
        record.clOrderId = fieldSetFlags()[12] ? this.clOrderId : (java.lang.String) defaultValue(fields()[12]);
        record.txId = fieldSetFlags()[13] ? this.txId : (java.lang.String) defaultValue(fields()[13]);
        record.msg = fieldSetFlags()[14] ? this.msg : (java.lang.String) defaultValue(fields()[14]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
