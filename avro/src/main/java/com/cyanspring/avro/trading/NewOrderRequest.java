/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cyanspring.avro.trading;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NewOrderRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NewOrderRequest\",\"namespace\":\"com.cyanspring.avro.trading\",\"fields\":[{\"name\":\"objectType\",\"type\":\"int\"},{\"name\":\"symbol\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"orderSide\",\"type\":\"int\"},{\"name\":\"orderType\",\"type\":\"int\"},{\"name\":\"timeInForce\",\"type\":\"int\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"quantity\",\"type\":\"double\"},{\"name\":\"exchangeAccount\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"created\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"clOrderId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"txId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int objectType;
  @Deprecated public java.lang.String symbol;
  @Deprecated public int orderSide;
  @Deprecated public int orderType;
  @Deprecated public int timeInForce;
  @Deprecated public double price;
  @Deprecated public double quantity;
  @Deprecated public java.lang.String exchangeAccount;
  @Deprecated public java.lang.String created;
  @Deprecated public java.lang.String clOrderId;
  @Deprecated public java.lang.String txId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public NewOrderRequest() {}

  /**
   * All-args constructor.
   */
  public NewOrderRequest(java.lang.Integer objectType, java.lang.String symbol, java.lang.Integer orderSide, java.lang.Integer orderType, java.lang.Integer timeInForce, java.lang.Double price, java.lang.Double quantity, java.lang.String exchangeAccount, java.lang.String created, java.lang.String clOrderId, java.lang.String txId) {
    this.objectType = objectType;
    this.symbol = symbol;
    this.orderSide = orderSide;
    this.orderType = orderType;
    this.timeInForce = timeInForce;
    this.price = price;
    this.quantity = quantity;
    this.exchangeAccount = exchangeAccount;
    this.created = created;
    this.clOrderId = clOrderId;
    this.txId = txId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return objectType;
    case 1: return symbol;
    case 2: return orderSide;
    case 3: return orderType;
    case 4: return timeInForce;
    case 5: return price;
    case 6: return quantity;
    case 7: return exchangeAccount;
    case 8: return created;
    case 9: return clOrderId;
    case 10: return txId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: objectType = (java.lang.Integer)value$; break;
    case 1: symbol = (java.lang.String)value$; break;
    case 2: orderSide = (java.lang.Integer)value$; break;
    case 3: orderType = (java.lang.Integer)value$; break;
    case 4: timeInForce = (java.lang.Integer)value$; break;
    case 5: price = (java.lang.Double)value$; break;
    case 6: quantity = (java.lang.Double)value$; break;
    case 7: exchangeAccount = (java.lang.String)value$; break;
    case 8: created = (java.lang.String)value$; break;
    case 9: clOrderId = (java.lang.String)value$; break;
    case 10: txId = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'objectType' field.
   */
  public java.lang.Integer getObjectType() {
    return objectType;
  }

  /**
   * Sets the value of the 'objectType' field.
   * @param value the value to set.
   */
  public void setObjectType(java.lang.Integer value) {
    this.objectType = value;
  }

  /**
   * Gets the value of the 'symbol' field.
   */
  public java.lang.String getSymbol() {
    return symbol;
  }

  /**
   * Sets the value of the 'symbol' field.
   * @param value the value to set.
   */
  public void setSymbol(java.lang.String value) {
    this.symbol = value;
  }

  /**
   * Gets the value of the 'orderSide' field.
   */
  public java.lang.Integer getOrderSide() {
    return orderSide;
  }

  /**
   * Sets the value of the 'orderSide' field.
   * @param value the value to set.
   */
  public void setOrderSide(java.lang.Integer value) {
    this.orderSide = value;
  }

  /**
   * Gets the value of the 'orderType' field.
   */
  public java.lang.Integer getOrderType() {
    return orderType;
  }

  /**
   * Sets the value of the 'orderType' field.
   * @param value the value to set.
   */
  public void setOrderType(java.lang.Integer value) {
    this.orderType = value;
  }

  /**
   * Gets the value of the 'timeInForce' field.
   */
  public java.lang.Integer getTimeInForce() {
    return timeInForce;
  }

  /**
   * Sets the value of the 'timeInForce' field.
   * @param value the value to set.
   */
  public void setTimeInForce(java.lang.Integer value) {
    this.timeInForce = value;
  }

  /**
   * Gets the value of the 'price' field.
   */
  public java.lang.Double getPrice() {
    return price;
  }

  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.lang.Double value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   */
  public java.lang.Double getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Double value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'exchangeAccount' field.
   */
  public java.lang.String getExchangeAccount() {
    return exchangeAccount;
  }

  /**
   * Sets the value of the 'exchangeAccount' field.
   * @param value the value to set.
   */
  public void setExchangeAccount(java.lang.String value) {
    this.exchangeAccount = value;
  }

  /**
   * Gets the value of the 'created' field.
   */
  public java.lang.String getCreated() {
    return created;
  }

  /**
   * Sets the value of the 'created' field.
   * @param value the value to set.
   */
  public void setCreated(java.lang.String value) {
    this.created = value;
  }

  /**
   * Gets the value of the 'clOrderId' field.
   */
  public java.lang.String getClOrderId() {
    return clOrderId;
  }

  /**
   * Sets the value of the 'clOrderId' field.
   * @param value the value to set.
   */
  public void setClOrderId(java.lang.String value) {
    this.clOrderId = value;
  }

  /**
   * Gets the value of the 'txId' field.
   */
  public java.lang.String getTxId() {
    return txId;
  }

  /**
   * Sets the value of the 'txId' field.
   * @param value the value to set.
   */
  public void setTxId(java.lang.String value) {
    this.txId = value;
  }

  /** Creates a new NewOrderRequest RecordBuilder */
  public static com.cyanspring.avro.trading.NewOrderRequest.Builder newBuilder() {
    return new com.cyanspring.avro.trading.NewOrderRequest.Builder();
  }
  
  /** Creates a new NewOrderRequest RecordBuilder by copying an existing Builder */
  public static com.cyanspring.avro.trading.NewOrderRequest.Builder newBuilder(com.cyanspring.avro.trading.NewOrderRequest.Builder other) {
    return new com.cyanspring.avro.trading.NewOrderRequest.Builder(other);
  }
  
  /** Creates a new NewOrderRequest RecordBuilder by copying an existing NewOrderRequest instance */
  public static com.cyanspring.avro.trading.NewOrderRequest.Builder newBuilder(com.cyanspring.avro.trading.NewOrderRequest other) {
    return new com.cyanspring.avro.trading.NewOrderRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for NewOrderRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NewOrderRequest>
    implements org.apache.avro.data.RecordBuilder<NewOrderRequest> {

    private int objectType;
    private java.lang.String symbol;
    private int orderSide;
    private int orderType;
    private int timeInForce;
    private double price;
    private double quantity;
    private java.lang.String exchangeAccount;
    private java.lang.String created;
    private java.lang.String clOrderId;
    private java.lang.String txId;

    /** Creates a new Builder */
    private Builder() {
      super(com.cyanspring.avro.trading.NewOrderRequest.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cyanspring.avro.trading.NewOrderRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.objectType)) {
        this.objectType = data().deepCopy(fields()[0].schema(), other.objectType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.symbol)) {
        this.symbol = data().deepCopy(fields()[1].schema(), other.symbol);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orderSide)) {
        this.orderSide = data().deepCopy(fields()[2].schema(), other.orderSide);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orderType)) {
        this.orderType = data().deepCopy(fields()[3].schema(), other.orderType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timeInForce)) {
        this.timeInForce = data().deepCopy(fields()[4].schema(), other.timeInForce);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.price)) {
        this.price = data().deepCopy(fields()[5].schema(), other.price);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.quantity)) {
        this.quantity = data().deepCopy(fields()[6].schema(), other.quantity);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.exchangeAccount)) {
        this.exchangeAccount = data().deepCopy(fields()[7].schema(), other.exchangeAccount);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.created)) {
        this.created = data().deepCopy(fields()[8].schema(), other.created);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.clOrderId)) {
        this.clOrderId = data().deepCopy(fields()[9].schema(), other.clOrderId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.txId)) {
        this.txId = data().deepCopy(fields()[10].schema(), other.txId);
        fieldSetFlags()[10] = true;
      }
    }
    
    /** Creates a Builder by copying an existing NewOrderRequest instance */
    private Builder(com.cyanspring.avro.trading.NewOrderRequest other) {
            super(com.cyanspring.avro.trading.NewOrderRequest.SCHEMA$);
      if (isValidValue(fields()[0], other.objectType)) {
        this.objectType = data().deepCopy(fields()[0].schema(), other.objectType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.symbol)) {
        this.symbol = data().deepCopy(fields()[1].schema(), other.symbol);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.orderSide)) {
        this.orderSide = data().deepCopy(fields()[2].schema(), other.orderSide);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orderType)) {
        this.orderType = data().deepCopy(fields()[3].schema(), other.orderType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timeInForce)) {
        this.timeInForce = data().deepCopy(fields()[4].schema(), other.timeInForce);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.price)) {
        this.price = data().deepCopy(fields()[5].schema(), other.price);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.quantity)) {
        this.quantity = data().deepCopy(fields()[6].schema(), other.quantity);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.exchangeAccount)) {
        this.exchangeAccount = data().deepCopy(fields()[7].schema(), other.exchangeAccount);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.created)) {
        this.created = data().deepCopy(fields()[8].schema(), other.created);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.clOrderId)) {
        this.clOrderId = data().deepCopy(fields()[9].schema(), other.clOrderId);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.txId)) {
        this.txId = data().deepCopy(fields()[10].schema(), other.txId);
        fieldSetFlags()[10] = true;
      }
    }

    /** Gets the value of the 'objectType' field */
    public java.lang.Integer getObjectType() {
      return objectType;
    }
    
    /** Sets the value of the 'objectType' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setObjectType(int value) {
      validate(fields()[0], value);
      this.objectType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'objectType' field has been set */
    public boolean hasObjectType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'objectType' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearObjectType() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'symbol' field */
    public java.lang.String getSymbol() {
      return symbol;
    }
    
    /** Sets the value of the 'symbol' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setSymbol(java.lang.String value) {
      validate(fields()[1], value);
      this.symbol = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'symbol' field has been set */
    public boolean hasSymbol() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'symbol' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearSymbol() {
      symbol = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'orderSide' field */
    public java.lang.Integer getOrderSide() {
      return orderSide;
    }
    
    /** Sets the value of the 'orderSide' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setOrderSide(int value) {
      validate(fields()[2], value);
      this.orderSide = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'orderSide' field has been set */
    public boolean hasOrderSide() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'orderSide' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearOrderSide() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'orderType' field */
    public java.lang.Integer getOrderType() {
      return orderType;
    }
    
    /** Sets the value of the 'orderType' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setOrderType(int value) {
      validate(fields()[3], value);
      this.orderType = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'orderType' field has been set */
    public boolean hasOrderType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'orderType' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearOrderType() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'timeInForce' field */
    public java.lang.Integer getTimeInForce() {
      return timeInForce;
    }
    
    /** Sets the value of the 'timeInForce' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setTimeInForce(int value) {
      validate(fields()[4], value);
      this.timeInForce = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'timeInForce' field has been set */
    public boolean hasTimeInForce() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'timeInForce' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearTimeInForce() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'price' field */
    public java.lang.Double getPrice() {
      return price;
    }
    
    /** Sets the value of the 'price' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setPrice(double value) {
      validate(fields()[5], value);
      this.price = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'price' field has been set */
    public boolean hasPrice() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'price' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearPrice() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'quantity' field */
    public java.lang.Double getQuantity() {
      return quantity;
    }
    
    /** Sets the value of the 'quantity' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setQuantity(double value) {
      validate(fields()[6], value);
      this.quantity = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'quantity' field has been set */
    public boolean hasQuantity() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'quantity' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearQuantity() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'exchangeAccount' field */
    public java.lang.String getExchangeAccount() {
      return exchangeAccount;
    }
    
    /** Sets the value of the 'exchangeAccount' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setExchangeAccount(java.lang.String value) {
      validate(fields()[7], value);
      this.exchangeAccount = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'exchangeAccount' field has been set */
    public boolean hasExchangeAccount() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'exchangeAccount' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearExchangeAccount() {
      exchangeAccount = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'created' field */
    public java.lang.String getCreated() {
      return created;
    }
    
    /** Sets the value of the 'created' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setCreated(java.lang.String value) {
      validate(fields()[8], value);
      this.created = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'created' field has been set */
    public boolean hasCreated() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'created' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearCreated() {
      created = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'clOrderId' field */
    public java.lang.String getClOrderId() {
      return clOrderId;
    }
    
    /** Sets the value of the 'clOrderId' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setClOrderId(java.lang.String value) {
      validate(fields()[9], value);
      this.clOrderId = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'clOrderId' field has been set */
    public boolean hasClOrderId() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'clOrderId' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearClOrderId() {
      clOrderId = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'txId' field */
    public java.lang.String getTxId() {
      return txId;
    }
    
    /** Sets the value of the 'txId' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder setTxId(java.lang.String value) {
      validate(fields()[10], value);
      this.txId = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'txId' field has been set */
    public boolean hasTxId() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'txId' field */
    public com.cyanspring.avro.trading.NewOrderRequest.Builder clearTxId() {
      txId = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public NewOrderRequest build() {
      try {
        NewOrderRequest record = new NewOrderRequest();
        record.objectType = fieldSetFlags()[0] ? this.objectType : (java.lang.Integer) defaultValue(fields()[0]);
        record.symbol = fieldSetFlags()[1] ? this.symbol : (java.lang.String) defaultValue(fields()[1]);
        record.orderSide = fieldSetFlags()[2] ? this.orderSide : (java.lang.Integer) defaultValue(fields()[2]);
        record.orderType = fieldSetFlags()[3] ? this.orderType : (java.lang.Integer) defaultValue(fields()[3]);
        record.timeInForce = fieldSetFlags()[4] ? this.timeInForce : (java.lang.Integer) defaultValue(fields()[4]);
        record.price = fieldSetFlags()[5] ? this.price : (java.lang.Double) defaultValue(fields()[5]);
        record.quantity = fieldSetFlags()[6] ? this.quantity : (java.lang.Double) defaultValue(fields()[6]);
        record.exchangeAccount = fieldSetFlags()[7] ? this.exchangeAccount : (java.lang.String) defaultValue(fields()[7]);
        record.created = fieldSetFlags()[8] ? this.created : (java.lang.String) defaultValue(fields()[8]);
        record.clOrderId = fieldSetFlags()[9] ? this.clOrderId : (java.lang.String) defaultValue(fields()[9]);
        record.txId = fieldSetFlags()[10] ? this.txId : (java.lang.String) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
