<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<context:annotation-config />

	<bean id="globalStrategySettings" class="com.cyanspring.common.strategy.GlobalStrategySettings">
		<property name="checkAdjQuote" value="false" />
		<property name="singleOrderCommonDisplayFields" ref="singleOrderCommonDisplayFields" />
		<property name="singleInstrumentCommonDisplayFields" ref="singleInstrumentCommonDisplayFields" />
		<property name="singleOrderCommonFieldDefs" ref="singleOrderCommonFieldDefs" />
		<property name="singleInstrumentCommonFieldDefs" ref="singleInstrumentCommonFieldDefs" />
		<property name="multiInstrumentCommonDisplayFields" ref="multiInstrumentCommonDisplayFields" />
		<property name="multiInstrumentCommonFieldDefs" ref="multiInstrumentCommonFieldDefs" />
		<property name="validateQuote" value="false" />
	</bean>

	<bean id="server" class="com.cyanspring.server.Server">
		<property name="simulatorMode">
			<value>false</value>
		</property>
		<property name="headless">
			<value>false</value>
		</property>
		<property name="plugins">
			<list>
				<ref bean="marketSessionUtil" />
				<ref bean="apiBridgeManager" />
				<ref bean="indexMarketSessionManager" />
				<ref bean="refDataHandler" />
				<ref bean="mdManager" />
				<ref bean="downStreamManager" />
				<ref bean="accountPositionManager" />
				<ref bean="trailingStopManager" />
				<ref bean="validationDataProvider" />
				<ref bean="statisticManager" />
				<ref bean="systemSuspendValidator" />
				<ref bean="liveTradingSession" />
			</list>
		</property>
		<property name="readyMap">
			<map key-type="java.lang.String" value-type="java.lang.Boolean">
				<entry key="DownStream" value="false" />
				<entry key="Recovery" value="false" />
				<entry key="RefData" value="false" />
			</map>
		</property>
	</bean>

	<bean id="transactionValidator"
		class="com.cyanspring.server.validation.transaction.TransactionValidator">
		<property name="validators">
			<list>
				<ref bean="systemSuspendValidator" />
			</list>
		</property>
	</bean>

	<bean id="systemSuspendValidator"
		class="com.cyanspring.server.validation.transaction.SystemSuspendValidator" />
		
	<bean id="statisticManager" class="com.cyanspring.server.statistic.StatisticManager">
	</bean>

	<bean id="validationDataProvider"
		class="com.cyanspring.server.validation.data.IndexValidationDataProvider">
	</bean>

	<bean id="trailingStopManager" class="com.cyanspring.server.account.TrailingStopManager">
	</bean>
	<bean id="eventManager" class="com.cyanspring.event.RemoteEventManager">
		<constructor-arg>
			<ref bean="transportService" />
		</constructor-arg>
		<property name="embedBroker" value="true" />
		<property name="bridges">
			<list>
				<ref bean="apiBridgeManager" />
			</list>
		</property>
	</bean>

	<bean id="apiBridgeManager" class="com.cyanspring.server.api.ApiBridgeManager">
		<property name="requestMap">
			<map>
				<entry key="UserLoginEvent"
					value="com.cyanspring.event.api.obj.request.ApiUserLoginEvent" />
				<entry key="StrategySnapshotRequestEvent"
					value="com.cyanspring.event.api.obj.request.ApiStrategySnapshotRequestEvent" />
				<entry key="QuoteSubEvent"
					value="com.cyanspring.event.api.obj.request.ApiQuoteSubEvent" />
				<entry key="NewSingleInstrumnetStrategyEvent"
					value="com.cyanspring.event.api.obj.request.ApiNewSingleInstrumentStrategyEvent" />
				<entry key="NewMultiInstrumentStrategyEvent"
					value="com.cyanspring.event.api.obj.request.ApiNewMultiInstrumentStrategyEvent" />
				<entry key="EnterParentOrderEvent"
					value="com.cyanspring.event.api.obj.request.ApiEnterParentOrderEvent" />
				<entry key="CancelSingleInstrumentStrategyEvent"
					value="com.cyanspring.event.api.obj.request.ApiCancelSingleInstrumentStrategyEvent" />
				<entry key="CancelParentOrderEvent"
					value="com.cyanspring.event.api.obj.request.ApiCancelParentOrderEvent" />
				<entry key="CancelMultiInstrumentStrategyEvent"
					value="com.cyanspring.event.api.obj.request.ApiCancelMultiInstrumentStrategyEvent" />
				<entry key="AmendSingleInstrumentStrategyEvent"
					value="com.cyanspring.event.api.obj.request.ApiAmendSingleInstrumentStrategyEvent" />
				<entry key="AmendParentOrderEvent"
					value="com.cyanspring.event.api.obj.request.ApiAmendParentOrderEvent" />
				<entry key="AmendMultiInstrumentStrategyEvent"
					value="com.cyanspring.event.api.obj.request.ApiAmendMultiInstrumentStrategyEvent" />
				<entry key="AccountSnapshotRequestEvent"
					value="com.cyanspring.event.api.obj.request.ApiAccountSnapshotRequestEvent" />
			</map>
		</property>
		<property name="replyMap">
			<map>
				<entry key="UserLoginReplyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiUserLoginReplyEvent" />
				<entry key="AccountSnapshotReplyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiAccountSnapshotReplyEvent" />
				<entry key="AccountUpdateEvent"
					value="com.cyanspring.event.api.obj.reply.ApiAccountUpdateEvent" />
				<entry key="AmendMultiInstrumentStrategyReplyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiAmendMultiInstrumentStrategyReplyEvent" />
				<entry key="AmendParentOrderReplyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiAmendParentOrderReplyEvent" />
				<entry key="AmendSingleInstrumentStrategyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiAmendSingleInstrumentStrategyReplyEvent" />
				<entry key="CancelMultiInstrumentStrategyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiCancelMultiInstrumentStrategyReplyEvent" />
				<entry key="CancelParentOrderReplyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiCancelParentOrderReplyEvent" />
				<entry key="CancelSingleInstrumentStrategyReplyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiCancelSingleInstrumentStrategyReplyEvent" />
				<entry key="EnterParentOrderReplyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiEnterParentOrderReplyEvent" />
				<entry key="NewMultuInstrumentStrategyReplyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiNewMultiInstrumentStrategyReplyEvent" />
				<entry key="NewSingleInstrumentStrategyReplyEvent"
					value="com.cyanspring.event.api.obj.reply.ApiNewSingleInstrumentStrategyReplyEvent" />
				<entry key="OpenPositionUpdateEvent"
					value="com.cyanspring.event.api.obj.reply.ApiOpenPositionUpdateEvent" />
				<entry key="ParentOrderUpdateEvent"
					value="com.cyanspring.event.api.obj.reply.ApiParentOrderUpdateEvent" />
				<entry key="QuoteEvent" value="com.cyanspring.event.api.obj.reply.ApiQuoteEvent" />
				<entry key="StrategySnapshotEvent"
					value="com.cyanspring.event.api.obj.reply.ApiStrategySnapshotEvent" />
			</map>
		</property>
	</bean>

	<bean id="resourceManager" class="com.cyanspring.event.api.ApiResourceManager">
		<property name="socketService">
			<ref bean="socketService" />
		</property>
	</bean>

	<bean id="socketService" class="com.cyanspring.transport.socket.ServerSocketService">
		<property name="port" value="52324" />
	</bean>

	<bean id="persistenceManager" class="com.cyanspring.server.persistence.PersistenceManager">
		<property name="embeddedSQLServer" value="true" />
		<property name="embeddedHost" value="0.0.0.0" />
		<property name="embeddedPort" ref="derbyPort" />
		<property name="deleteTerminated" value="false" />
		<property name="textSize" value="4000" />
		<property name="cleanStart" value="false" />
		<property name="todayOnly" value="false" />
		<property name="checkEmailUnique" value="onlyExist" />
		<property name="checkPhoneUnique" value="noCheck" />
		<property name="syncCentralDb" value="false" />
		<property name="useLtsGateway" value="true" />
	</bean>
	
	<bean id="positionRecoveryProcessor" class="com.cyanspring.server.PositionRecoveryProcessor">
        <property name="todayOnly" value="true"></property>
    </bean>

    <bean id="executionRecoveryProcessor" class="com.cyanspring.server.ExecutionRecoveryProcessor">
        <property name="todayOnly" value="true"></property>
    </bean>

    <bean id="strategyRecoveryProcessor" class="com.cyanspring.server.StrategyRecoveryProcessor">
        <property name="todayOnly" value="true" />
        <property name="liveTrading" value="true" />
    </bean>

	<bean id="quoteSaver" class="com.cyanspring.common.marketdata.QuoteSaver" />
	<bean id="quoteChecker" class="com.cyanspring.common.marketdata.QuoteChecker">
		<property name="quotePriceWarningIsOpen" value="true" />
		<property name="quotePriceWarningPercent" value="50" />
	</bean>

	<bean id="preSubscriptionList" class="java.util.ArrayList">
		<constructor-arg>
			<list>
			</list>
		</constructor-arg>
	</bean>

	<bean id="strategyContainer" class="com.cyanspring.strategy.AsyncStrategyContainer"
		scope="prototype">
	</bean>

	<bean id="orderManager" class="com.cyanspring.server.OrderManager">
		<property name="publishChildOrder" value="true" />
	</bean>

	<bean id="scheduleManager" class="com.cyanspring.common.event.ScheduleManager">
	</bean>

	<bean id="hkexTickTable" class="com.cyanspring.common.staticdata.HKexTickTable">
	</bean>
	<bean id="forexTickTable" class="com.cyanspring.common.staticdata.ForexTickTable">
	</bean>
	<bean id="ftTickTable" class="com.cyanspring.common.staticdata.ForexTickTable">
		<property name="tickTable">
			<array>
				<array>
					<value>0</value>
					<value>1000000</value>
					<value>1</value>
				</array>
			</array>
		</property>
	</bean>

	<bean id="tickTableManager" class="com.cyanspring.common.staticdata.TickTableManager">
		<property name="tickTables">
			<map key-type="java.lang.String" value-type="com.cyanspring.common.staticdata.ITickTable">
				<entry key="DEFAULT" value-ref="hkexTickTable" />
				<entry key="FX" value-ref="forexTickTable" />
				<entry key="FT" value-ref="ftTickTable" />
			</map>
		</property>
	</bean>

	<bean id="businessManager" class="com.cyanspring.server.BusinessManager">
		<property name="noOfContainers">
			<value>10</value>
		</property>
		<property name="autoStartStrategy">
			<value>true</value>
		</property>
		<property name="cancelAllOrdersAtClose">
			<value>false</value>
		</property>
		<property name="closeAllPositionsAtClose">
            <value>false</value>
        </property>
	</bean>

	<bean id="accountPositionManager" class="com.cyanspring.server.account.AccountPositionManager">
		<property name="quoteChecker">
			<bean class="com.cyanspring.common.marketdata.PriceQuoteChecker" />
		</property>
		<property name="fxSymbols">
			<list>
			</list>
		</property>
		<property name="dailyExecTime" ref="dailyExec" /> <!-- format=[HH:mm:ss] 24hr -->
		<property name="dynamicUpdateInterval">
            <value>100</value>
		</property>
		<property name="rmUpdateInterval">
            <value>120</value>
        </property>
        <property name="sendDynamicPositionUpdate">
            <value>true</value>
        </property>
	</bean>

	<bean id="userKeeper" class="com.cyanspring.server.account.UserKeeper">
	</bean>

	<bean id="accountKeeper" class="com.cyanspring.server.account.AccountKeeper">
		<property name="rmJobBatch" value="5000" />
	</bean>

	<bean id="positionKeeper" class="com.cyanspring.server.account.PositionKeeper">
		<property name="useMid" value="false"></property>
	</bean>

	<bean id="fxConverter" class="com.cyanspring.server.fx.FxConverter">
	</bean>

	<bean id="leverageManager" class="com.cyanspring.server.account.LeverageManager">
	</bean>

	<bean id="commissionManager" class="com.cyanspring.server.account.FTCommissionManager">
		<property name="trxTaxRate" value="0.00002" />
	</bean>

	<bean id="refDataHandler" class="com.cyanspring.common.refdata.DealerRefDataHandler">
		<constructor-arg>
			<list>
				<ref bean="refDataAdapterFT" />
			</list>
		</constructor-arg>
		<property name="eventManager" ref="eventManager" />
	</bean>

	<bean id="refDataManager" class="com.cyanspring.common.staticdata.RefDataFactory">
		<property name="refDataTemplatePath">
			<value>refdata/template/template_FT.xml</value>
		</property>
	</bean>

	<bean id="refDataUtil" class="com.cyanspring.common.staticdata.RefDataUtil">
	</bean>

	<bean id="userGroupRecoveryProcessor" class="com.cyanspring.server.UserGroupRecoveryProcessor">
	</bean>

	<bean id="userRecoveryProcessor" class="com.cyanspring.server.UserRecoveryProcessor">
	</bean>

	<bean id="accountRecoveryProcessor" class="com.cyanspring.server.AccountRecoveryProcessor">
	</bean>

	<bean id="accountSettingRecoveryProcessor" class="com.cyanspring.server.AccountSettingRecoveryProcessor">
	</bean>

	<bean id="riskOrderController" class="com.cyanspring.server.order.RiskOrderController">
		<property name="maxRiskOrderCount" ref="maxRiskOrderCount" />
		<property name="maxTotalOrderCount" ref="maxTotalOrderCount" />
	</bean>

	<bean id="orderRouter" class="com.cyanspring.server.downstream.AccountOrderRouter">
	</bean>

	<bean id="downStreamManager" class="com.cyanspring.common.downstream.DownStreamManager">
		<constructor-arg>
			<list>
				<ref bean="hyperDownStreamAdaptor" />
			</list>
		</constructor-arg>
		<constructor-arg>
			<list>
			</list>
		</constructor-arg>
	</bean>

	<bean id="hyperDownStreamAdaptor" class="com.cyanspring.server.sim.HyperDownStreamAdaptor">
    </bean>

    <bean id="hyperDownStreamConnection" class="com.cyanspring.server.sim.HyperDownStreamConnection">
        <property name="checkSingleSide" value="true"/>
    </bean>

	<bean id="quoteCleaner" class="com.cyanspring.common.marketdata.WindQuoteCleaner" />
	<bean id="quoteExtendCleaner" class="com.cyanspring.common.marketdata.QuoteExtendCleaner" />

	<bean id="refDataTplLoader" class="com.cyanspring.common.staticdata.RefDataTplLoader">
		<property name="tplPath">
			<value>refdata/template/template_FT.xml</value>
		</property>
	</bean>

	<bean id="categoryFilter" class="com.cyanspring.common.filter.CategoryFilter">
		<property name="refDataTplLoader" ref="refDataTplLoader"></property>
	</bean>

	<bean id="itypeFilter" class="com.cyanspring.common.filter.ITypeFilter">
		<property name="types">
			<list>
				<value>FUTURES_FT</value>
				<value>EXCHANGE_INDEX</value>
			</list>
		</property>
	</bean>

	<bean id="refDataFilter" class="com.cyanspring.common.filter.RefDataFilter">
		<constructor-arg>
			<list>
				<ref bean="categoryFilter" />
				<ref bean="itypeFilter" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="indexMarketSessionManager"
		class="com.cyanspring.common.marketsession.IndexMarketSessionManager">
		<property name="settlementDelay">
			<value>45</value>
		</property>
		<property name="eventManager" ref="eventManager"></property>
	</bean>

	<bean id="marketSessionUtil" class="com.cyanspring.common.marketsession.MarketSessionUtil">
		<constructor-arg>
			<list>
				<ref bean="fitxSessionChecker" />
				<ref bean="fimtxSessionChecker" />
				<ref bean="indexSessionChecker" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="twfStrategy" class="com.cyanspring.common.staticdata.fu.TWFStrategy">
		<property name="weekOfMonth">
			<value>3</value>
		</property>
		<property name="dayOfWeek">
			<value>4</value><!-- Calendar.WEDNESDAY -->
		</property>
		<property name="settlementTime">
			<!-- The value must be aligned with the CLOSE time of SettlementSession 
				in FITXSessionState.xml/FIMTXSessionState.xml -->
			<value>13:30:00</value><!-- HH:mm:ss -->
		</property>
	</bean>
	
</beans>
