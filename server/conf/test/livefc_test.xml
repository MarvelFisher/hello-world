<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

    <context:annotation-config />

    <bean id="server" class="com.cyanspring.server.Server">
        <property name="simulatorMode">
            <value>true</value>
        </property>
        <property name="headless">
            <value>false</value>
        </property>
        <property name="plugins">
            <list>
                <ref bean="marketSessionManager" />
                <ref bean="refDataHandler" />
                <ref bean="indexMarketSessionManager"/>
                <ref bean="mdManager" />
                <ref bean="downStreamManager" />
                <ref bean="upStreamManager" />
                <ref bean="accountPositionManager" />
                <ref bean="apiBridgeManager" />
                <!-- <ref bean="alertManager" /> -->
                <ref bean="autoRunner" />
				<ref bean="validationDataProvider"/>
            </list>
        </property>
        <property name="readyMap">
            <map key-type="java.lang.String" value-type="java.lang.Boolean">
                <entry key="DownStream" value="false" />
                <entry key="Recovery" value="false" />
            </map>
        </property>
    </bean>
    
    <bean id="validationDataProvider" class="com.cyanspring.server.validation.data.ValidationDataProvider">
	</bean>
    
    <bean id="eventManager" class="com.cyanspring.event.RemoteEventManager">
        <constructor-arg>
            <ref bean="transportService" />
        </constructor-arg>
        <property name="embedBroker" value="true"/>
        <property name="bridges">
            <list>
                <ref bean="apiBridgeManager" />
            </list>
        </property>
    </bean>

    <bean id="apiBridgeManager" class="com.cyanspring.server.api.ApiBridgeManager">
        <property name="requestMap">
            <map>
                <entry key="UserLoginEvent" value="com.cyanspring.event.api.obj.request.ApiUserLoginEvent"/>
                <entry key="StrategySnapshotRequestEvent" value="com.cyanspring.event.api.obj.request.ApiStrategySnapshotRequestEvent"/>
                <entry key="QuoteSubEvent" value="com.cyanspring.event.api.obj.request.ApiQuoteSubEvent" />
                <entry key="NewSingleInstrumnetStrategyEvent" value="com.cyanspring.event.api.obj.request.ApiNewSingleInstrumentStrategyEvent"/>
                <entry key="NewMultiInstrumentStrategyEvent" value="com.cyanspring.event.api.obj.request.ApiNewMultiInstrumentStrategyEvent"/>
                <entry key="EnterParentOrderEvent" value="com.cyanspring.event.api.obj.request.ApiEnterParentOrderEvent"/>
                <entry key="CancelSingleInstrumentStrategyEvent" value="com.cyanspring.event.api.obj.request.ApiCancelSingleInstrumentStrategyEvent"/>
                <entry key="CancelParentOrderEvent" value="com.cyanspring.event.api.obj.request.ApiCancelParentOrderEvent"/>
                <entry key="CancelMultiInstrumentStrategyEvent" value="com.cyanspring.event.api.obj.request.ApiCancelMultiInstrumentStrategyEvent"/>
                <entry key="AmendSingleInstrumentStrategyEvent" value="com.cyanspring.event.api.obj.request.ApiAmendSingleInstrumentStrategyEvent"/>
                <entry key="AmendParentOrderEvent" value="com.cyanspring.event.api.obj.request.ApiAmendParentOrderEvent"/>
                <entry key="AmendMultiInstrumentStrategyEvent" value="com.cyanspring.event.api.obj.request.ApiAmendMultiInstrumentStrategyEvent"/>
                <entry key="AccountSnapshotRequestEvent" value="com.cyanspring.event.api.obj.request.ApiAccountSnapshotRequestEvent"/>
            </map>
        </property>
        <property name="replyMap">
            <map>
                <entry key="UserLoginReplyEvent" value="com.cyanspring.event.api.obj.reply.ApiUserLoginReplyEvent"/>
                <entry key="AccountSnapshotReplyEvent" value="com.cyanspring.event.api.obj.reply.ApiAccountSnapshotReplyEvent"/>
                <entry key="AccountUpdateEvent" value="com.cyanspring.event.api.obj.reply.ApiAccountUpdateEvent"/>
                <entry key="AmendMultiInstrumentStrategyReplyEvent" value="com.cyanspring.event.api.obj.reply.ApiAmendMultiInstrumentStrategyReplyEvent"/>
                <entry key="AmendParentOrderReplyEvent" value="com.cyanspring.event.api.obj.reply.ApiAmendParentOrderReplyEvent"/>
                <entry key="AmendSingleInstrumentStrategyEvent" value="com.cyanspring.event.api.obj.reply.ApiAmendSingleInstrumentStrategyReplyEvent"/>
                <entry key="CancelMultiInstrumentStrategyEvent" value="com.cyanspring.event.api.obj.reply.ApiCancelMultiInstrumentStrategyReplyEvent"/>
                <entry key="CancelParentOrderReplyEvent" value="com.cyanspring.event.api.obj.reply.ApiCancelParentOrderReplyEvent"/>
                <entry key="CancelSingleInstrumentStrategyReplyEvent" value="com.cyanspring.event.api.obj.reply.ApiCancelSingleInstrumentStrategyReplyEvent"/>
                <entry key="EnterParentOrderReplyEvent" value="com.cyanspring.event.api.obj.reply.ApiEnterParentOrderReplyEvent"/>
                <entry key="NewMultuInstrumentStrategyReplyEvent" value="com.cyanspring.event.api.obj.reply.ApiNewMultiInstrumentStrategyReplyEvent"/>
                <entry key="NewSingleInstrumentStrategyReplyEvent" value="com.cyanspring.event.api.obj.reply.ApiNewSingleInstrumentStrategyReplyEvent"/>
                <entry key="OpenPositionUpdateEvent" value="com.cyanspring.event.api.obj.reply.ApiOpenPositionUpdateEvent"/>
                <entry key="ParentOrderUpdateEvent" value="com.cyanspring.event.api.obj.reply.ApiParentOrderUpdateEvent"/>
                <entry key="QuoteEvent" value="com.cyanspring.event.api.obj.reply.ApiQuoteEvent"/>
                <entry key="StrategySnapshotEvent" value="com.cyanspring.event.api.obj.reply.ApiStrategySnapshotEvent"/>
            </map>
        </property>
    </bean>

    <bean id="resourceManager" class="com.cyanspring.event.api.ApiResourceManager">
        <property name="socketService">
            <ref bean="socketService" />
        </property>
    </bean>

    <bean id="socketService" class="com.cyanspring.transport.socket.ServerSocketService">
    </bean>

    <bean id="persistenceManager" class="com.cyanspring.server.persistence.PersistenceManager">
        <property name="embeddedSQLServer" value="true"/>
        <property name="embeddedHost" value="0.0.0.0"/>
        <property name="embeddedPort" ref="derbyPort"/>
        <property name="deleteTerminated" value="false"/>
        <property name="textSize" value="4000"/>
        <property name="cleanStart" value="false"/>
        <property name="todayOnly" value="true"/>
        <property name="syncCentralDb" value="false"/>
    </bean>

    <bean id="quoteSaver" class="com.cyanspring.common.marketdata.QuoteSaver"/>
    <bean id="quoteChecker" class="com.cyanspring.common.marketdata.QuoteChecker">
        <property name="quotePriceWarningIsOpen" value="true"/>
        <property name="quotePriceWarningPercent" value="50"/>
    </bean>

    <bean id="preSubscriptionList" class="java.util.ArrayList">
        <constructor-arg>
            <list>
            </list>
        </constructor-arg>
    </bean>

    <bean id="simMarketDataAdaptor" class="com.cyanspring.server.sim.SimMarketDataAdaptor">
        <constructor-arg>
            <ref bean="simExchange" />
        </constructor-arg>
        <property name="sourceId" value="101"/>
    </bean>

    <bean id="simExchange" class="webcurve.exchange.Exchange">
    </bean>

    <bean id="strategyContainer" class="com.cyanspring.strategy.AsyncStrategyContainer"
          scope="prototype">
    </bean>

    <bean id="orderManager" class="com.cyanspring.server.OrderManager">
        <property name="publishChildOrder" value="true"/>
    </bean>

    <bean id="scheduleManager" class="com.cyanspring.common.event.ScheduleManager">
    </bean>

    <bean id="hkexTickTable" class="com.cyanspring.common.staticdata.HKexTickTable">
    </bean>
    <bean id="forexTickTable" class="com.cyanspring.common.staticdata.ForexTickTable">
    </bean>
    <bean id="ifTickTable" class="com.cyanspring.common.staticdata.IFTickTable">
    </bean>

    <bean id="tickTableManager" class="com.cyanspring.common.staticdata.TickTableManager">
        <property name="tickTables">
            <map key-type="java.lang.String" value-type="com.cyanspring.common.staticdata.ITickTable">
                <entry key="DEFAULT" value-ref="hkexTickTable" />
                <entry key="FX" value-ref="forexTickTable" />
                <entry key="IF" value-ref="ifTickTable" />
            </map>
        </property>
    </bean>

    <bean id="businessManager" class="com.cyanspring.server.BusinessManager">
        <property name="noOfContainers">
            <value>10</value>
        </property>
        <property name="autoStartStrategy">
            <value>true</value>
        </property>
        <property name="cancelAllOrdersAtClose">
            <value>true</value>
        </property>
    </bean>

    <bean id="accountPositionManager" class="com.cyanspring.server.account.AccountPositionManager">
        <property name="quoteChecker">
            <bean class="com.cyanspring.common.marketdata.PriceQuoteChecker"/>
        </property>
        <property name="fxSymbols">
            <list>
            </list>
        </property>
        <property name="dailyExecTime" ref="dailyExec" /> <!-- format=[HH:mm:ss] 24hr -->
    </bean>

    <bean id="userKeeper" class="com.cyanspring.server.account.UserKeeper">
    </bean>

    <bean id="accountKeeper" class="com.cyanspring.server.account.AccountKeeper">
        <property name="rmJobBatch" value="5000"/>
    </bean>

    <bean id="positionKeeper" class="com.cyanspring.server.account.PositionKeeper">
    </bean>

    <bean id="fxConverter" class="com.cyanspring.server.fx.FxConverter">
    </bean>

    <bean id="autoRunner" class="com.cyanspring.server.AutoRunner">
    </bean>

    <bean id="tickDataManager" class="com.cyanspring.server.marketdata.TickDataManager">
        <property name="directory">
            <value>ticks</value>
        </property>
        <property name="tickDataWriter">
            <ref bean="tickDataWriter" />
        </property>
        <property name="newFile">
            <value>true</value>
        </property>
        <property name="symbolList">
            <list>
            </list>
        </property>
    </bean>

    <bean id="tickDataWriter" class="com.cyanspring.common.marketdata.QuoteDataWriter">
    </bean>

    <bean id="leverageManager" class="com.cyanspring.server.account.LeverageManager">
    </bean>

    <bean id="commissionManager" class="com.cyanspring.server.account.CommissionManager">
    </bean>

    <bean id="refDataHandler" class="com.cyanspring.server.refdata.RefDataHandler"/>

    <bean id="refDataManager" class="com.cyanspring.common.staticdata.RefDataFactory">
        <property name="refDataFile">
            <value>refdata/refData_fc.xml</value>
        </property>
        <property name="marketSessionUtil"><ref bean="marketSessionUtil"/></property>
    </bean>

    <bean id="userRecoveryProcessor" class="com.cyanspring.server.UserRecoveryProcessor">
    </bean>

    <bean id="accountRecoveryProcessor" class="com.cyanspring.server.AccountRecoveryProcessor">
    </bean>

    <bean id="accountSettingRecoveryProcessor" class="com.cyanspring.server.AccountSettingRecoveryProcessor">
    </bean>

    <bean id="positionRecoveryProcessor" class="com.cyanspring.server.PositionRecoveryProcessor">
    </bean>

    <bean id="executionRecoveryProcessor" class="com.cyanspring.server.ExecutionRecoveryProcessor">
    </bean>

    <bean id="strategyRecoveryProcessor" class="com.cyanspring.server.StrategyRecoveryProcessor">
    </bean>

    <bean id="downStreamManager" class="com.cyanspring.common.downstream.DownStreamManager">
        <constructor-arg>
            <list>
                <ref bean="ctpAdaptor" />
            </list>
        </constructor-arg>
        <constructor-arg>
            <list>
            </list>
        </constructor-arg>
    </bean>

    <bean id="hyperDownStreamAdaptor" class="com.cyanspring.server.sim.HyperDownStreamAdaptor">
    </bean>

    <bean id="hyperDownStreamConnection" class="com.cyanspring.server.sim.HyperDownStreamConnection">
        <property name="checkSingleSide" value="true"/>
    </bean>

	<bean id="ctpAdaptor" class="com.cyanspring.adaptor.future.ctp.trader.CtpTradeAdaptor">
		<property name="url">
			<value>tcp://180.168.146.181:10200</value>
		</property>
		<property name="conLog">
			<value>./tradeCon/</value>
		</property>
		<property name="user">
			<value>00090</value>
		</property>
		<property name="password">
			<value>hkfdt1234</value>
		</property>
		<property name="broker">
			<value>0253</value>
		</property>
		<property name="connectionCount">
			<value>1</value>
		</property>
		<property name="libPath">
			<value>../adaptor/ctplib/win32/thosttraderapi.dll</value>
		</property>
        <property name="symbolConverter">
            <bean class="com.cyanspring.common.business.CnFutureSymbolConverter"/>
        </property>
	</bean>

    <bean id="upStreamManager" class="com.cyanspring.server.upstream.UpStreamManager">
        <constructor-arg>
            <list>
            </list>
        </constructor-arg>
    </bean>

    <bean id="indexMarketSessionManager" class="com.cyanspring.server.marketsession.IndexMarketSessionManager">
        <property name="settlementDelay"><value>45</value></property>
    </bean>

    <bean id="marketSessionUtil" class="com.cyanspring.common.marketsession.MarketSessionUtil">
        <constructor-arg>
            <map>
                <entry key="IF">
                    <ref bean="IFsessionChecker" />
                </entry>
            </map>
        </constructor-arg>
        <constructor-arg>
            <map>
                <entry key="IF"><ref bean="IFtradeDateManager"/></entry>
            </map>
        </constructor-arg>
    </bean>

</beans>
