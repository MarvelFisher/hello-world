<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<context:annotation-config />

	<bean id="server" class="com.cyanspring.server.Server">
		<property name="simulatorMode">
			<value>true</value>
		</property>
		<property name="headless">
			<value>false</value>
		</property>
		<property name="plugins">
			<list>
				<ref bean="marketSessionManager" />
				<ref bean="refDataManager" />
				<ref bean="mdManager" />
				<ref bean="downStreamManager" />
				<ref bean="upStreamManager" />
				<ref bean="accountPositionManager" />
				<ref bean="apiBridgeManager" />
<!-- 				<ref bean="alertManager" /> -->
				<ref bean="autoRunner" />
			</list>
		</property>
		<property name="readyMap">
			<map key-type="java.lang.String" value-type="java.lang.Boolean">
				<entry key="DownStream" value="false" />
				<entry key="Recovery" value="false" />
			</map>
		</property>
	</bean>
	<bean id="eventManager" class="com.cyanspring.event.RemoteEventManager">
		<constructor-arg>
			<ref bean="transportService" />
		</constructor-arg>
		<property name="embedBroker" value="true"></property>
		<property name="bridges">
			<list>
				<ref bean="apiBridgeManager" />
			</list>
		</property>
	</bean>

	<bean id="apiBridgeManager" class="com.cyanspring.server.api.ApiBridgeManager">
		<property name="socketService">
			<ref bean="socketService" />
		</property>
	</bean>

	<bean id="socketService" class="com.cyanspring.transport.socket.ServerSocketService">
	</bean>

	<bean id="persistenceManager" class="com.cyanspring.server.persistence.PersistenceManager">
		<property name="embeddedSQLServer" value="true"></property>
		<property name="embeddedHost" value="0.0.0.0"></property>
		<property name="embeddedPort" value="1527"></property>
		<property name="deleteTerminated" value="false"></property>
		<property name="textSize" value="4000"></property>
		<property name="cleanStart" value="false"></property>
		<property name="todayOnly" value="true"></property>
		<property name="syncCentralDb" value="false"></property>
	</bean>

	<bean id="mdManager" class="com.cyanspring.server.marketdata.MarketDataManager">
		<constructor-arg>
			<ref bean="windFutureDataAdaptor" />
		</constructor-arg>
		<property name="preSubscriptionList">
			<list>
				<value>IF1502</value>
				<value>IF1503</value>
			</list>
		</property>
		<property name="sessionMonitor">
			<map>
				<entry key="OPEN" value="10000" />   <!-- Unit: msec -->
				<entry key="PREOPEN" value="0" />
				<entry key="CLOSE" value="0" />
			</map>
		</property>
	</bean>

	<bean id="simMarketDataAdaptor" class="com.cyanspring.server.sim.SimMarketDataAdaptor">
		<constructor-arg>
			<ref bean="simExchange" />
		</constructor-arg>
	</bean>

	<bean id="simExchange" class="webcurve.exchange.Exchange">
	</bean>

	<bean id="strategyContainer" class="com.cyanspring.strategy.AsyncStrategyContainer"
		scope="prototype">
	</bean>

	<bean id="orderManager" class="com.cyanspring.server.OrderManager">
		<property name="publishChildOrder" value="true"></property>
	</bean>

	<bean id="scheduleManager" class="com.cyanspring.common.event.ScheduleManager">
	</bean>

	<bean id="hkexTickTable" class="com.cyanspring.common.staticdata.HKexTickTable">
	</bean>
	<bean id="forexTickTable" class="com.cyanspring.common.staticdata.ForexTickTable">
	</bean>

	<bean id="tickTableManager" class="com.cyanspring.common.staticdata.TickTableManager">
		<property name="tickTables">
			<map key-type="java.lang.String" value-type="com.cyanspring.common.staticdata.ITickTable">
				<entry key="DEFAULT" value-ref="hkexTickTable" />
				<entry key="FX" value-ref="forexTickTable" />
			</map>
		</property>
	</bean>

	<bean id="businessManager" class="com.cyanspring.server.BusinessManager">
		<property name="noOfContainers">
			<value>10</value>
		</property>
		<property name="autoStartStrategy">
			<value>true</value>
		</property>
	</bean>

	<bean id="accountPositionManager" class="com.cyanspring.server.account.AccountPositionManager">
		<property name="quoteChecker">
			<bean class="com.cyanspring.common.marketdata.PriceQuoteChecker"></bean>
		</property>
		<property name="fxSymbols">
			<list>
			</list>
		</property>
		<property name="dailyExecTime" value="05:45:00" /> <!-- format=[HH:mm:ss] 24hr -->
	</bean>

	<bean id="userKeeper" class="com.cyanspring.server.account.UserKeeper">
	</bean>

	<bean id="accountKeeper" class="com.cyanspring.server.account.AccountKeeper">
		<property name="rmJobBatch" value="5000"></property>
	</bean>

	<bean id="positionKeeper" class="com.cyanspring.server.account.PositionKeeper">
	</bean>

	<bean id="fxConverter" class="com.cyanspring.server.fx.FxConverter">
	</bean>

	<bean id="autoRunner" class="com.cyanspring.server.AutoRunner">
	</bean>

	<bean id="tickDataManager" class="com.cyanspring.server.marketdata.TickDataManager">
		<property name="directory">
			<value>ticks</value>
		</property>
		<property name="tickDataWriter">
			<ref bean="tickDataWriter" />
		</property>
		<property name="newFile">
			<value>true</value>
		</property>
		<property name="symbolList">
			<list>
			</list>
		</property>
	</bean>

	<bean id="tickDataWriter" class="com.cyanspring.common.marketdata.QuoteDataWriter">
	</bean>

	<bean id="refDataManager" class="com.cyanspring.common.staticdata.RefDataManager">
		<property name="refDataFile">
			<value>refdata/refData_cf.xml</value>
		</property>
	</bean>

	<bean id="userRecoveryProcessor" class="com.cyanspring.server.UserRecoveryProcessor">
	</bean>

	<bean id="accountRecoveryProcessor" class="com.cyanspring.server.AccountRecoveryProcessor">
	</bean>

	<bean id="accountSettingRecoveryProcessor" class="com.cyanspring.server.AccountSettingRecoveryProcessor">
	</bean>

	<bean id="positionRecoveryProcessor" class="com.cyanspring.server.PositionRecoveryProcessor">
	</bean>

	<bean id="executionRecoveryProcessor" class="com.cyanspring.server.ExecutionRecoveryProcessor">
	</bean>

	<bean id="strategyRecoveryProcessor" class="com.cyanspring.server.StrategyRecoveryProcessor">
	</bean>

	<bean id="parseAlertSender" class="com.cyanspring.server.alert.ParseAlertSender">
		<property name="parseApplicationId" value="SzaPSKsOWCA0paXxKYLSOdruiQjfsKb2KiyNR073" />
		<property name="parseRestApiId" value="G0eVbakiHczHuwuEUY0F1TVrSMrcjiPWRiMfdu6Z" />
	</bean>

	<bean id="downStreamManager" class="com.cyanspring.common.downstream.DownStreamManager">
		<constructor-arg>
			<list>
				<ref bean="hyperDownStreamAdaptor" />
			</list>
		</constructor-arg>
		<constructor-arg>
			<list>
			</list>
		</constructor-arg>
	</bean>

	<bean id="hyperDownStreamAdaptor" class="com.cyanspring.server.sim.HyperDownStreamAdaptor">
	</bean>

	<bean id="hyperDownStreamConnection" class="com.cyanspring.server.sim.HyperDownStreamConnection">
	</bean>

	<bean id="upStreamManager" class="com.cyanspring.server.upstream.UpStreamManager">
		<constructor-arg>
			<list>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="windFutureDataAdaptor"
		class="com.cyanspring.adaptor.future.wind.WindFutureDataAdaptor">
		<property name="showGui" value="true"></property>
		<property name="reqIp" ref="windIP"></property>
		<property name="reqPort" ref="windPort"></property>
		<property name="userName" ref="windUserName"></property>
		<property name="password" ref="windUserPwd"></property>
	</bean>

</beans>
