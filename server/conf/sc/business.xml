<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd"
>

	<context:annotation-config />

	<bean id="parentOrderValidator" class="com.cyanspring.server.validation.ParentOrderValidator">       
	    <constructor-arg>
	        <list>
	        	<ref bean="accountStateValidator"/>
				<ref bean="marketSessionValidator"/>
				<ref bean="orderFieldValidator"/>
				<ref bean="strategyOrderValidator"/>
				<ref bean="creditValidator"/>
				<ref bean="orderCountValidator"/>
				<ref bean="maxLotValidator"/>
				<ref bean="ceilFloorValidator"/>
				<ref bean="availablePositionValidator"/>
	        </list>
	    </constructor-arg>
	</bean>	
	<bean id="accountStateValidator" class="com.cyanspring.server.validation.AccountStateValidator">
	</bean>
	<bean id="ceilFloorValidator" class="com.cyanspring.server.validation.CeilFloorValidator">   
	</bean>
		<!-- For MarketSessionValidator -->	
	<bean id="availableTimeList" class="java.util.ArrayList">
	 	<constructor-arg>
	        <list>
	             <bean id="rejectOrderTimeOnPreopenState" class="com.cyanspring.server.validation.bean.AvailableTimeBean">
				 	 <property name="marketSession" value="PREOPEN"/>
				 	 <property name="startTime" value="09:00:00"/>
				 	 <property name="endTime" value="09:10:00"/>
				 </bean>
	        </list>
         </constructor-arg>
	 </bean>
	
	
	<!-- field specific validation -->
	<bean id="orderFieldValidator" class="com.cyanspring.server.validation.OrderFieldValidator">       
	    <property name="fieldValidators">
	  		<map>
	  			<entry key="Strategy">
					<bean class="com.cyanspring.server.validation.StrategyFieldValidator"/>
				</entry>
	  			<entry key="POV">
					<bean class="com.cyanspring.server.validation.PovValidator"/>
				</entry>
	  			<entry key="POV limit">
					<bean class="com.cyanspring.server.validation.PovValidator"/>
				</entry>
	  			<entry key="Symbol">
					<bean class="com.cyanspring.server.validation.InstrumentValidator"/>
				</entry>
	  			<entry key="Qty">
					<bean class="com.cyanspring.server.validation.OrderQuantityValidator"/>
				</entry>
	  			<entry key="Dis Qty">
					<bean class="com.cyanspring.server.validation.OrderQuantityValidator"/>
				</entry>
	  			<entry key="Qty">
					<bean class="com.cyanspring.server.validation.OrderQuantityValidator"/>
				</entry>
	  			<entry key="Start Time">
					<bean class="com.cyanspring.server.validation.StartTimeValidator"/>
				</entry>
	  			<entry key="End Time">
					<bean class="com.cyanspring.server.validation.EndTimeValidator"/>
				</entry>
	  			<entry key="User">
					<bean class="com.cyanspring.server.validation.UserValidator"/>
				</entry>
	  			<entry key="Account">
					<bean class="com.cyanspring.server.validation.AccountValidator"/>
				</entry>
	  			<entry key="Stop Loss">
					<bean class="com.cyanspring.server.validation.StopLossPriceValidator"/>
				</entry>
       		</map>
        </property>
	</bean>	
	
	<!-- strategy specific validation -->
	<bean id="strategyOrderValidator" class="com.cyanspring.server.validation.StrategyOrderValidator">       
	    <property name="strategyValidators">
	  		<map>
	  			<entry key="SNIPER">
			  		<bean class="com.cyanspring.server.validation.SniperValidator"/>
				</entry>
	  			<entry key="ICEBERG">
			  		<bean class="com.cyanspring.server.validation.IcebergValidator"/>
				</entry>
	  			<entry key="STOP">
			  		<bean class="com.cyanspring.server.validation.StopLossOrderValidator"/>
				</entry>
       		</map>
        </property>
	</bean>	
	
	<bean id="parentOrderPreCheck" class="com.cyanspring.server.validation.ParentOrderPreCheck">       
	</bean>	
	
	<bean id="creditValidator" class="com.cyanspring.server.validation.CreditValidator">       
	</bean>	
	
	<bean id="orderCountValidator" class="com.cyanspring.server.validation.OrderCountValidator">       
	</bean>	
	
	<bean id="maxLotValidator" class="com.cyanspring.server.validation.MaxLotValidator"></bean>
	<bean id="marketSessionValidator" class="com.cyanspring.server.validation.MarketSessionValidator"></bean>

	<bean id="availablePositionValidator" class="com.cyanspring.server.validation.AvailablePositionValidator" />
	
	<bean id="fixToOrderMap" class="com.cyanspring.common.util.DualMap">
	    <constructor-arg>
           	<map key-type="java.lang.Integer" value-type="java.lang.String">
            	<entry key="6001" value="Strategy"/>
            	<entry key="6002" value="Start Time"/>
            	<entry key="6003" value="End Time"/>
            	<entry key="6010" value="POV"/>
        	</map>
	    </constructor-arg>
	</bean>
	
	<bean id="fixParentOrderConverter" class="com.cyanspring.server.fix.FixParentOrderConverter">       
	</bean>

	<bean id="fixDataConverter" class="com.cyanspring.common.business.util.GenericDataConverter">
	    <property name="fieldMap">
	  		<map>
            	<entry key="Start Time" value-ref="utcTimeOnlyConverter" />
            	<entry key="End Time" value-ref="utcTimeOnlyConverter" />
       		</map>
        </property>
	</bean>
	
	<bean id="utcTimeOnlyConverter" class="com.cyanspring.server.fix.UTCTimeOnlyConverter">
	</bean>
	
	<bean id="parentOrderDefaultValueFiller" class="com.cyanspring.server.validation.ParentOrderDefaultValueFiller">       
	    <constructor-arg>
	  		<map>
	  			<entry>
	  				<!-- conditions -->
	  				<key> 
	  					<map key-type="java.lang.String" value-type="java.lang.String">
	  						
	  					</map>
	  				</key>
	  				<!-- fields to default -->
  					<map key-type="java.lang.String" value-type="java.lang.String">
       					<entry key="Strategy" value="POV"/>
       					<entry key="POV limit" value="40"/>
  					</map>
	  			</entry>
       		</map>
	    </constructor-arg>
	</bean>

	<bean id="defaultStartEndTime" class="com.cyanspring.common.marketsession.DefaultStartEndTime">
		<constructor-arg><value>01:00:00</value></constructor-arg>
     	<constructor-arg><value>23:00:00</value></constructor-arg>
	</bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.cyanspring.common.Default.setValues"/>
        <property name="arguments">
		    <list>
	           	<value>default</value>
	           	<value>default</value>
	           	<value>SC</value>
	           	<value>CNY</value>
	           	<value>A</value>
	           	<value>1000000.0</value>
	           	<value>1.0</value>
	           	<value>100000.0</value>
	           	<value>0.00005</value>
	           	<value>2</value>
	           	<null/>
	           	<value>100000.0</value>
	           	<value>0.0</value>
	           	<value>0.98</value>
				<value>1</value>
				<value>0.1</value>
				<value>0.2</value>
				<value>0.3</value>
				<value>false</value>
				<value>false</value>
				<value>0</value>
				<value>0</value>
				<value>DAY_TRADING</value>
            </list>
       </property>
    </bean>

</beans>
